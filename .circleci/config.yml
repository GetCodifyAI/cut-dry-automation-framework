version: 2.1

executors:
  ui-tests-executor:
    docker:
      - image: cimg/base:stable
    environment:
      MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    resource_class: large

jobs:
  ui-tests:
    parameters:
      suite:
        type: string
    executor: ui-tests-executor
#    parallelism: 1
    steps:
      - checkout

      # Restore cached dependencies to reduce downloads
      - restore_cache:
          key: dependency-cache-{{ checksum "pom.xml" }}

      # Install Java (if not already installed)
      - run:
          name: Install Java 22
          command: |
            if ! java -version | grep "22"; then
              sudo apt-get update && sudo apt-get install -y wget
              wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
              sudo mkdir -p /usr/lib/jvm
              sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
              sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
              echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
              source $BASH_ENV
            fi
            java -version

      # Install Maven (if not already installed)
      - run:
          name: Install Maven
          command: |
            if ! mvn -version | grep "Apache Maven"; then
              sudo apt-get install -y maven
            fi
            mvn -version

      # Install Chrome (if not already installed)
      - run:
          name: Install Chrome
          command: |
            if ! google-chrome --version | grep "Google Chrome"; then
              wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
              sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
              sudo apt-get update
              sudo apt-get install -y google-chrome-stable
            fi
            google-chrome --version

      # Save dependencies cache to avoid repeated downloads
      - save_cache:
          key: dependency-cache-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
            - /usr/lib/jvm
            - /usr/bin/java
            - /usr/bin/google-chrome

      # Run UI tests in parallel mode (Dividing test cases automatically)
      - run:
          name: Execute UI Tests
          command: mvn clean test -Dsurefire.suiteXmlFiles=<< parameters.suite >> -Drun.headless=true -Dtest.env=uat

      # Store only failed test logs & reports to minimize network overhead
      - store_artifacts:
          path: target/surefire-reports
          destination: test-results

workflows:
  version: 2

  build-and-test:
    jobs:
      - ui-tests:
          matrix:
            parameters:
              suite: ["bvt.xml"]

#  scheduled-test-1:
#    triggers:
#      - schedule:
#          cron: "30 20 * * *"  # Runs at 2:00 AM IST (08:30 PM UTC)
#          filters:
#            branches:
#              only:
#                - feature/circleci_execution
#    jobs:
#      - ui-tests:
#          matrix:
#            parameters:
#              suite: ["regression1.xml", "regression2.xml", "regression3.xml",
#                      "regression4.xml", "regression5.xml", "regression6.xml",
#                      "regression7.xml", "regression8.xml", "regression9.xml", "regression10.xml"]

  scheduled-test-2:
    triggers:
      - schedule:
          cron: "15 14 * * 1-5"  # Runs at 7:45 PM IST (2:15 PM UTC)
          filters:
            branches:
              only:
                - feature/circleci_execution
    jobs:
      - ui-tests:
          matrix:
            parameters:
              suite: ["regression1.xml", "regression2.xml", "regression3.xml",
                      "regression4.xml", "regression5.xml", "regression6.xml",
                      "regression7.xml", "regression8.xml", "regression9.xml", "regression10.xml"]
