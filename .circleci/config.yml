version: 2.1

executors:
  java-taurus-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/repo
    resource_class: xlarge

jobs:
  taurus-selenium-ui-perf:
    executor: java-taurus-executor
    environment:
      USERS: 1
    steps:
      - checkout
      - run:
          name: List all files after checkout
          command: find . -type f | sort

      - run:
          name: Install Java 22
          command: |
            sudo apt-get update && sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk22/830ec9fcccef480bb3e73fb7ecafe059/36/GPL/openjdk-22_linux-x64_bin.tar.gz
            sudo mkdir -p /usr/lib/jvm
            sudo tar zxvf openjdk-22_linux-x64_bin.tar.gz -C /usr/lib/jvm
            sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-22/bin/java 2200
            sudo update-alternatives --config java
            echo 'export PATH="/usr/lib/jvm/jdk-22/bin:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            java -version
      - run:
          name: Install Maven
          command: |
            sudo apt-get install -y maven
            mvn -version
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            google-chrome --version

      - run:
          name: Install Taurus
          command: |
            sudo apt-get install -y python3-pip
            pip3 install bzt

#      - run:
#          name: Build Project with Maven
#          command: mvn clean package -Drun.headless=true -Dtest.env=uat -e

#      - run:
#          name: Copy Dependencies
#          command: mvn clean test-compile dependency:copy-dependencies -DoutputDirectory=target/dependency
##          command: mvn dependency:copy-dependencies -DoutputDirectory=target/dependency

      - run:
          name: Check for required source files
          command: |
            for f in \
              src/main/java/com/cutanddry/qa/base/TestBase.java \
              src/main/java/com/cutanddry/qa/data/models/User.java \
              src/main/java/com/cutanddry/qa/functions/Dashboard.java \
              src/main/java/com/cutanddry/qa/functions/Login.java \
              src/main/java/com/cutanddry/qa/utils/JsonUtil.java; do
              if [ ! -f "$f" ]; then
                echo "ERROR: Missing required source file: $f"
                exit 1
              fi
            done

      - run:
          name: Build Project and Copy Dependencies
          command: |
            mvn clean package dependency:copy-dependencies -DoutputDirectory=target/dependency -Drun.headless=true -Dtest.env=uat -e

      - run:
          name: Show Maven Dependencies
          command: |
            echo "Contents of target/dependency:"
            ls -l target/dependency/

      - run:
          name: Validate jcommander.jar presence
          command: |
            echo "Looking for jcommander.jar in target/dependency:"
            find target/dependency -name "jcommander*.jar" || (echo "jcommander.jar NOT FOUND" && exit 1)

      - run:
          name: Check and Show Compiled Test Classes
          command: |
            if [ ! -d target/test-classes ]; then
              echo "ERROR: target/test-classes directory not found!"
              exit 1
            else
              echo "Contents of target/test-classes:"
              find target/test-classes
            fi

      - run:
          name: Check and Show Compiled Main Classes
          command: |
            if [ ! -d target/classes ]; then
              echo "ERROR: target/classes directory not found!"
              exit 1
            else
              echo "Contents of target/classes:"
              find target/classes
            fi

      - run:
          name: Debug Compiled Classes
          command: |
            echo "Checking for compiled DistributorOrderSubmissionTest:"
            find target/test-classes -name "*DistributorOrderSubmissionTest.class" || echo "Not found"
      - run:
          name: List testng.xml
          command: ls -l target/test-classes/testng.xml

      - run:
          name: Run Taurus UI Performance Test
          command: |
            mkdir -p results
            bzt taurus-config/selenium_order_flow.yml \
                -o execution.0.concurrency=1 \
                -o modules.testng.classpath="target/classes,target/test-classes,target/dependency/*"

#      - run:
#          name: Run Taurus UI Performance Test
#          command: |
#            mkdir -p results
#            bzt taurus-config/selenium_order_flow.yml -o execution.0.concurrency=1

      - store_artifacts:
          path: target/surefire-reports
          destination: build-and-test-artifacts

workflows:
  version: 2

  build-and-test:
    jobs:
      - taurus-selenium-ui-perf

  daily_manual_trigger:
    triggers:
      - schedule:
          cron: "28 16 * * 1-5"
          filters:
            branches:
              only:
                - order_flow_perf
    jobs:
      - taurus-selenium-ui-perf
#      - approve-before-run:
#          type: approval
#      - taurus-selenium-ui-perf:
#          requires:
#            - approve-before-run